import{_ as r,X as i,Y as n,Z as e,a0 as o,$ as t,a1 as s,E as l}from"./framework-9435e890.js";const d={},c=e("h2",{id:"tl-dr",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tl-dr","aria-hidden":"true"},"#"),o(" TL;DR")],-1),h={href:"https://github.com/liblaf/Telegram",target:"_blank",rel:"noopener noreferrer"},f=e("code",null,"release.keystore",-1),m=e("code",null,"google-services.json",-1),u=s('<h2 id="environment" tabindex="-1"><a class="header-anchor" href="#environment" aria-hidden="true">#</a> Environment</h2><h3 id="recommended-environment" tabindex="-1"><a class="header-anchor" href="#recommended-environment" aria-hidden="true">#</a> Recommended Environment</h3><ul><li>Android Studio 3.4</li><li>Android NDK rev.20</li><li>Android SDK 8.1</li></ul><h3 id="i-am-using" tabindex="-1"><a class="header-anchor" href="#i-am-using" aria-hidden="true">#</a> I am using</h3><ul><li>Android Studio 2021.3.1.16</li><li>Android NDK 21.4.7075529</li><li>Android SDK 31.0.0</li></ul><h2 id="compilation-guide" tabindex="-1"><a class="header-anchor" href="#compilation-guide" aria-hidden="true">#</a> Compilation Guide<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></h2><ol><li>Download the Telegram source code from https://github.com/DrKLO/Telegram ( git clone https://github.com/DrKLO/Telegram.git )</li><li>Copy your release.keystore into TMessagesProj/config</li><li>Fill out RELEASE_KEY_PASSWORD, RELEASE_KEY_ALIAS, RELEASE_STORE_PASSWORD in gradle.properties to access your release.keystore</li><li>Go to https://console.firebase.google.com/, create two android apps with application IDs org.telegram.messenger and org.telegram.messenger.beta, turn on firebase messaging and download google-services.json, which should be copied to the same folder as TMessagesProj.</li><li>Open the project in the Studio (note that it should be opened, NOT imported).</li><li>Fill out values in TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java – there’s a link for each of the variables showing where and which data to obtain.</li><li>You are ready to compile Telegram.</li></ol><h2 id="generate-release-keystore" tabindex="-1"><a class="header-anchor" href="#generate-release-keystore" aria-hidden="true">#</a> Generate <code>release.keystore</code></h2><p>In Android Studio</p><ol><li>Find in Menu Bar: “Build” &gt; “Generate Signed Bundle / APK …”</li><li>Choose “APK” and click “Next”</li><li>Click “Create New …” and fill in necessary fields</li><li>Whatever</li></ol><h2 id="asan-compatibility" tabindex="-1"><a class="header-anchor" href="#asan-compatibility" aria-hidden="true">#</a> ASan compatibility</h2><p>Telegram depends on some prebuilt static libraries. However, ASan requires a shared build.<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup> I haven’t find a way to use ASan yet.</p><hr class="footnotes-sep">',13),g={class:"footnotes"},p={class:"footnotes-list"},_={id:"footnote1",class:"footnote-item"},b={href:"https://github.com/DrKLO/Telegram#compilation-guide",target:"_blank",rel:"noopener noreferrer"},A=e("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1),v={id:"footnote2",class:"footnote-item"},S={href:"https://developer.android.com/ndk/guides/asan",target:"_blank",rel:"noopener noreferrer"},k=e("a",{href:"#footnote-ref2",class:"footnote-backref"},"↩︎",-1);function E(y,T){const a=l("ExternalLinkIcon");return i(),n("div",null,[c,e("p",null,[o("Clone from "),e("a",h,[o("liblaf/Telegram"),t(a)]),o(" and you are good to go. I have had "),f,o(" and "),m,o(" prepared.")]),u,e("section",g,[e("ol",p,[e("li",_,[e("p",null,[e("a",b,[o("DrKLO/Telegram: Telegram for Android source"),t(a)]),o(),A])]),e("li",v,[e("p",null,[e("a",S,[o("Address Sanitizer | Android NDK | Android Developers"),t(a)]),o(),k])])])])])}const D=r(d,[["render",E],["__file","index.html.vue"]]);export{D as default};
