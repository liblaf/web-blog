const e=JSON.parse('{"key":"v-e7c479c2","path":"/course-work/csapp/2022/05/23/cache-lab/","title":"Cache Lab: Understanding Cache Memories","lang":"en-US","frontmatter":{"lastUpdated":true,"contributors":true,"editLink":true,"category":["Course Work"],"tag":["Computer Organization and Architecture","Cache Lab"],"isOriginal":true,"date":"2022-05-23T00:00:00.000Z","permalinkPattern":"course-work/csapp/:year/:month/:day/:slug","title":"Cache Lab: Understanding Cache Memories","description":"Part A: Writing a Cache Simulator argparse 部分使用了更强大的 argp, 而没有使用 getopt (因为一开始没看到作业建议用 getopt) 忽略 Instruction Load, Data Load 和 Data Store 都可看作访问一次 cache, 而 Data Modify 由 Data Load 和 Data Store 组成可看作访问两次 cache.","head":[["meta",{"property":"og:url","content":"https://blog.liblaf.me/course-work/csapp/2022/05/23/cache-lab/"}],["meta",{"property":"og:site_name","content":"Blog"}],["meta",{"property":"og:title","content":"Cache Lab: Understanding Cache Memories"}],["meta",{"property":"og:description","content":"Part A: Writing a Cache Simulator argparse 部分使用了更强大的 argp, 而没有使用 getopt (因为一开始没看到作业建议用 getopt) 忽略 Instruction Load, Data Load 和 Data Store 都可看作访问一次 cache, 而 Data Modify 由 Data Load 和 Data Store 组成可看作访问两次 cache."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-02-24T05:36:48.000Z"}],["meta",{"property":"article:tag","content":"Computer Organization and Architecture"}],["meta",{"property":"article:tag","content":"Cache Lab"}],["meta",{"property":"article:published_time","content":"2022-05-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-24T05:36:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Cache Lab: Understanding Cache Memories\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-02-24T05:36:48.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Part A: Writing a Cache Simulator","slug":"part-a-writing-a-cache-simulator","link":"#part-a-writing-a-cache-simulator","children":[{"level":3,"title":"Evaluation","slug":"evaluation","link":"#evaluation","children":[]}]},{"level":2,"title":"Part B: Optimizing Matrix Transpose","slug":"part-b-optimizing-matrix-transpose","link":"#part-b-optimizing-matrix-transpose","children":[{"level":3,"title":"Transpose32x32","slug":"transpose32x32","link":"#transpose32x32","children":[{"level":4,"title":"Performance","slug":"performance","link":"#performance","children":[]}]},{"level":3,"title":"Transpose64x64","slug":"transpose64x64","link":"#transpose64x64","children":[{"level":4,"title":"Performance","slug":"performance-1","link":"#performance-1","children":[]}]},{"level":3,"title":"Transpose61x67","slug":"transpose61x67","link":"#transpose61x67","children":[{"level":4,"title":"Performance","slug":"performance-2","link":"#performance-2","children":[]}]}]},{"level":2,"title":"Pulling it all Together","slug":"pulling-it-all-together","link":"#pulling-it-all-together","children":[]}],"git":{"createdTime":1677217008000,"updatedTime":1677217008000,"contributors":[{"name":"Qin Li","email":"liblaf@outlook.com","commits":1}]},"readingTime":{"minutes":4.63,"words":1388},"filePathRelative":"course-work/csapp/2022-05-23-cache-lab.md","localizedDate":"May 23, 2022","excerpt":"<h2> Part A: Writing a Cache Simulator</h2>\\n<blockquote>\\n<p><code>argparse</code> 部分使用了更强大的 <code>argp</code>, 而没有使用 <code>getopt</code> (因为一开始没看到作业建议用 <code>getopt</code>)</p>\\n</blockquote>\\n<p>忽略 Instruction Load, Data Load 和 Data Store 都可看作访问一次 cache, 而 Data Modify 由 Data Load 和 Data Store 组成可看作访问两次 cache.</p>","autoDesc":true}');export{e as data};
