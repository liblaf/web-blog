const e=JSON.parse('{"key":"v-0be061d9","path":"/course-work/hpc/2022/05/23/exp7-cuda-%E4%BC%98%E5%8C%96-global-memory-shared-memory/","title":"exp7: CUDA 优化 (global memory, shared memory)","lang":"en-US","frontmatter":{"lastUpdated":true,"contributors":true,"editLink":true,"category":["Course Work"],"tag":["Introduction to High Performance Computing","CUDA"],"isOriginal":true,"date":"2022-05-23T00:00:00.000Z","permalinkPattern":"course-work/hpc/:year/:month/:day/:slug","title":"exp7: CUDA 优化 (global memory, shared memory)","description":"分析 test_gmem.cu 的性能变化来源 __global__ void stride_copy(float *dst, float *src) { int i = blockIdx.x * blockDim.x + threadIdx.x; dst[i * STRIDE] = src[i * STRIDE]; }","head":[["meta",{"property":"og:url","content":"https://blog.liblaf.me/course-work/hpc/2022/05/23/exp7-cuda-%E4%BC%98%E5%8C%96-global-memory-shared-memory/"}],["meta",{"property":"og:site_name","content":"Blog"}],["meta",{"property":"og:title","content":"exp7: CUDA 优化 (global memory, shared memory)"}],["meta",{"property":"og:description","content":"分析 test_gmem.cu 的性能变化来源 __global__ void stride_copy(float *dst, float *src) { int i = blockIdx.x * blockDim.x + threadIdx.x; dst[i * STRIDE] = src[i * STRIDE]; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-02-24T05:36:48.000Z"}],["meta",{"property":"article:tag","content":"Introduction to High Performance Computing"}],["meta",{"property":"article:tag","content":"CUDA"}],["meta",{"property":"article:published_time","content":"2022-05-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-24T05:36:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"exp7: CUDA 优化 (global memory, shared memory)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-02-24T05:36:48.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"分析 test_gmem.cu 的性能变化来源","slug":"分析-test-gmem-cu-的性能变化来源","link":"#分析-test-gmem-cu-的性能变化来源","children":[{"level":3,"title":"性能变化的主要来源是 GPU 的哪种机制引起的？","slug":"性能变化的主要来源是-gpu-的哪种机制引起的","link":"#性能变化的主要来源是-gpu-的哪种机制引起的","children":[]},{"level":3,"title":"这种机制如何影响该程序的性能？","slug":"这种机制如何影响该程序的性能","link":"#这种机制如何影响该程序的性能","children":[]},{"level":3,"title":"是否有其他的硬件功能参与了该程序的执行过程, 它们会如何影响该程序的执行效率？","slug":"是否有其他的硬件功能参与了该程序的执行过程-它们会如何影响该程序的执行效率","link":"#是否有其他的硬件功能参与了该程序的执行过程-它们会如何影响该程序的执行效率","children":[]}]},{"level":2,"title":"分析 test_smem.cu 的性能变化来源","slug":"分析-test-smem-cu-的性能变化来源","link":"#分析-test-smem-cu-的性能变化来源","children":[{"level":3,"title":"固定 BITWIDTH 时, 程序的性能变化来源于哪种硬件机制？","slug":"固定-bitwidth-时-程序的性能变化来源于哪种硬件机制","link":"#固定-bitwidth-时-程序的性能变化来源于哪种硬件机制","children":[]},{"level":3,"title":"BITWIDTH 设置为 2,8 时性能变化的趋势相比于 BITWIDTH 设置为 4 时有什么不同之处, 请解释.","slug":"bitwidth-设置为-2-8-时性能变化的趋势相比于-bitwidth-设置为-4-时有什么不同之处-请解释","link":"#bitwidth-设置为-2-8-时性能变化的趋势相比于-bitwidth-设置为-4-时有什么不同之处-请解释","children":[]}]},{"level":2,"title":"Performance","slug":"performance","link":"#performance","children":[{"level":3,"title":"Global Memory","slug":"global-memory","link":"#global-memory","children":[]},{"level":3,"title":"Shared Memory","slug":"shared-memory","link":"#shared-memory","children":[]}]}],"git":{"createdTime":1677217008000,"updatedTime":1677217008000,"contributors":[{"name":"Qin Li","email":"liblaf@outlook.com","commits":1}]},"readingTime":{"minutes":2.91,"words":874},"filePathRelative":"course-work/hpc/2022-05-23-exp7-cuda-优化-global-memory-shared-memory.md","localizedDate":"May 23, 2022","excerpt":"<h2> 分析 <code>test_gmem.cu</code> 的性能变化来源</h2>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code>__global__ <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">stride_copy</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">float</span> <span class=\\"token operator\\">*</span>dst<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">float</span> <span class=\\"token operator\\">*</span>src<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> blockIdx<span class=\\"token punctuation\\">.</span>x <span class=\\"token operator\\">*</span> blockDim<span class=\\"token punctuation\\">.</span>x <span class=\\"token operator\\">+</span> threadIdx<span class=\\"token punctuation\\">.</span>x<span class=\\"token punctuation\\">;</span>\\n  dst<span class=\\"token punctuation\\">[</span>i <span class=\\"token operator\\">*</span> STRIDE<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> src<span class=\\"token punctuation\\">[</span>i <span class=\\"token operator\\">*</span> STRIDE<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
