import{_ as i,X as s,Y as r,Z as e,a0 as t,$ as n,a1 as o,E as l}from"./framework-9435e890.js";const d={},h=o(`<h1 id="h1-heading" tabindex="-1"><a class="header-anchor" href="#h1-heading" aria-hidden="true">#</a> h1 Heading 😎</h1><h2 id="h2-heading" tabindex="-1"><a class="header-anchor" href="#h2-heading" aria-hidden="true">#</a> h2 Heading</h2><h3 id="h3-heading" tabindex="-1"><a class="header-anchor" href="#h3-heading" aria-hidden="true">#</a> h3 Heading</h3><h4 id="h4-heading" tabindex="-1"><a class="header-anchor" href="#h4-heading" aria-hidden="true">#</a> h4 Heading</h4><h5 id="h5-heading" tabindex="-1"><a class="header-anchor" href="#h5-heading" aria-hidden="true">#</a> h5 Heading</h5><h6 id="h6-heading" tabindex="-1"><a class="header-anchor" href="#h6-heading" aria-hidden="true">#</a> h6 Heading</h6><h2 id="horizontal-rules" tabindex="-1"><a class="header-anchor" href="#horizontal-rules" aria-hidden="true">#</a> Horizontal Rules</h2><hr><hr><hr><h2 id="typographic-replacements" tabindex="-1"><a class="header-anchor" href="#typographic-replacements" aria-hidden="true">#</a> Typographic replacements</h2><p>Enable typographer option to see result.</p><p>© © ® ® ™ ™ (p) (P) ±</p><p>test… test… test… test?.. test!..</p><p>!!! ??? , – —</p><p>“Smartypants, double quotes” and ‘single quotes’</p><h2 id="emphasis" tabindex="-1"><a class="header-anchor" href="#emphasis" aria-hidden="true">#</a> Emphasis</h2><p><strong>This is bold text</strong></p><p><strong>This is bold text</strong></p><p><em>This is italic text</em></p><p><em>This is italic text</em></p><p><s>Strikethrough</s></p><h2 id="blockquotes" tabindex="-1"><a class="header-anchor" href="#blockquotes" aria-hidden="true">#</a> Blockquotes</h2><blockquote><p>Blockquotes can also be nested…</p><blockquote><p>…by using additional greater-than signs right next to each other…</p><blockquote><p>…or with spaces between arrows.</p></blockquote></blockquote></blockquote><h2 id="lists" tabindex="-1"><a class="header-anchor" href="#lists" aria-hidden="true">#</a> Lists</h2><p>Unordered</p><ul><li><p>Create a list by starting a line with <code>+</code>, <code>-</code>, or <code>*</code></p></li><li><p>Sub-lists are made by indenting 2 spaces:</p><ul><li><p>Marker character change forces new list start:</p><ul><li>Ac tristique libero volutpat at</li></ul><ul><li>Facilisis in pretium nisl aliquet</li></ul><ul><li>Nulla volutpat aliquam velit</li></ul></li></ul></li><li><p>Very easy!</p></li></ul><p>Ordered</p><ol><li><p>Lorem ipsum dolor sit amet</p></li><li><p>Consectetur adipiscing elit</p></li><li><p>Integer molestie lorem at massa</p></li><li><p>You can use sequential numbers…</p></li><li><p>…or keep all the numbers as <code>1.</code></p></li></ol><p>Start numbering with offset:</p><ol start="57"><li>foo</li><li>bar</li></ol><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2><p>Inline <code>code</code></p><p>Indented code</p><pre><code>// Some comments
line 1 of code
line 2 of code
line 3 of code
</code></pre><p>Block code “fences”</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Sample text here...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Syntax highlighting</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">bar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> bar<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tables" tabindex="-1"><a class="header-anchor" href="#tables" aria-hidden="true">#</a> Tables</h2><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td>data</td><td>path to data files to supply the data that will be passed into templates.</td></tr><tr><td>engine</td><td>engine to be used for processing templates. Handlebars is the default.</td></tr><tr><td>ext</td><td>extension to be used for dest files.</td></tr></tbody></table><p>Right aligned columns</p><table><thead><tr><th style="text-align:right;">Option</th><th style="text-align:right;">Description</th></tr></thead><tbody><tr><td style="text-align:right;">data</td><td style="text-align:right;">path to data files to supply the data that will be passed into templates.</td></tr><tr><td style="text-align:right;">engine</td><td style="text-align:right;">engine to be used for processing templates. Handlebars is the default.</td></tr><tr><td style="text-align:right;">ext</td><td style="text-align:right;">extension to be used for dest files.</td></tr></tbody></table><h2 id="links" tabindex="-1"><a class="header-anchor" href="#links" aria-hidden="true">#</a> Links</h2>`,44),c={href:"http://dev.nodeca.com",target:"_blank",rel:"noopener noreferrer"},p={href:"http://nodeca.github.io/pica/demo/",title:"title text!",target:"_blank",rel:"noopener noreferrer"},u=o('<p>Autoconverted link https://github.com/nodeca/pica (enable linkify to see)</p><h2 id="images" tabindex="-1"><a class="header-anchor" href="#images" aria-hidden="true">#</a> Images</h2><p><img src="https://octodex.github.com/images/minion.png" alt="Minion" loading="lazy"><img src="https://octodex.github.com/images/stormtroopocat.jpg" alt="Stormtroopocat" title="The Stormtroopocat" loading="lazy"></p><p>Like links, Images also have a footnote style syntax</p><figure><img src="https://octodex.github.com/images/dojocat.jpg" alt="Alt text" tabindex="0" loading="lazy"><figcaption>The Dojocat</figcaption></figure><p>With a reference later in the document defining the URL location:</p><h2 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> Plugins</h2>',7),f=e("code",null,"markdown-it",-1),m={href:"https://www.npmjs.org/browse/keyword/markdown-it-plugin",target:"_blank",rel:"noopener noreferrer"},g={id:"emojies",tabindex:"-1"},b=e("a",{class:"header-anchor",href:"#emojies","aria-hidden":"true"},"#",-1),_={href:"https://github.com/markdown-it/markdown-it-emoji",target:"_blank",rel:"noopener noreferrer"},k=e("blockquote",null,[e("p",null,"Classic markup: 😉 :crush: 😢 :tear: 😆 😋"),e("p",null,"Shortcuts (emoticons): 😃 😦 😎 😉")],-1),x={href:"https://github.com/markdown-it/markdown-it-emoji#change-output",target:"_blank",rel:"noopener noreferrer"},w={id:"subscript-superscript",tabindex:"-1"},v=e("a",{class:"header-anchor",href:"#subscript-superscript","aria-hidden":"true"},"#",-1),y={href:"https://github.com/markdown-it/markdown-it-sub",target:"_blank",rel:"noopener noreferrer"},T={href:"https://github.com/markdown-it/markdown-it-sup",target:"_blank",rel:"noopener noreferrer"},q=e("ul",null,[e("li",null,[t("19"),e("sup",null,"th")]),e("li",null,[t("H"),e("sub",null,"2"),t("O")])],-1),H={id:"ins",tabindex:"-1"},j=e("a",{class:"header-anchor",href:"#ins","aria-hidden":"true"},"#",-1),S={href:"https://github.com/markdown-it/markdown-it-ins",target:"_blank",rel:"noopener noreferrer"},L=e("p",null,"++Inserted text++",-1),D={id:"mark",tabindex:"-1"},I=e("a",{class:"header-anchor",href:"#mark","aria-hidden":"true"},"#",-1),M={href:"https://github.com/markdown-it/markdown-it-mark",target:"_blank",rel:"noopener noreferrer"},z=e("p",null,[e("mark",null,"Marked text")],-1),C={id:"footnotes",tabindex:"-1"},E=e("a",{class:"header-anchor",href:"#footnotes","aria-hidden":"true"},"#",-1),B={href:"https://github.com/markdown-it/markdown-it-footnote",target:"_blank",rel:"noopener noreferrer"},F=o('<p>Footnote 1 link<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>.</p><p>Footnote 2 link<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup>.</p><p>Inline footnote<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup> definition.</p><p>Duplicated footnote reference<sup class="footnote-ref"><a href="#footnote2">[2:1]</a><a class="footnote-anchor" id="footnote-ref2:1"></a></sup>.</p>',4),N={id:"definition-lists",tabindex:"-1"},V=e("a",{class:"header-anchor",href:"#definition-lists","aria-hidden":"true"},"#",-1),A={href:"https://github.com/markdown-it/markdown-it-deflist",target:"_blank",rel:"noopener noreferrer"},O=o(`<p>Term 1</p><p>: Definition 1 with lazy continuation.</p><p>Term 2 with <em>inline markup</em></p><p>: Definition 2</p><pre><code>    { some code, part of Definition 2 }

Third paragraph of definition 2.
</code></pre><p><em>Compact style:</em></p><p>Term 1 ~ Definition 1</p><p>Term 2 ~ Definition 2a ~ Definition 2b</p>`,8),R={id:"abbreviations",tabindex:"-1"},P=e("a",{class:"header-anchor",href:"#abbreviations","aria-hidden":"true"},"#",-1),U={href:"https://github.com/markdown-it/markdown-it-abbr",target:"_blank",rel:"noopener noreferrer"},Y=e("p",null,"This is HTML abbreviation example.",-1),W=e("p",null,"It converts “HTML”, but keep intact partial entries like “xxxHTMLyyy” and so on.",-1),X=e("p",null,"*[HTML]: Hyper Text Markup Language",-1),Z={id:"custom-containers",tabindex:"-1"},$=e("a",{class:"header-anchor",href:"#custom-containers","aria-hidden":"true"},"#",-1),G={href:"https://github.com/markdown-it/markdown-it-container",target:"_blank",rel:"noopener noreferrer"},J=o('<div class="hint-container warning"><p class="hint-container-title">Note</p><p><em>here be dragons</em></p></div><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>Footnote <strong>can have markup</strong></p><p>and multiple paragraphs. <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p>Footnote text. <a href="#footnote-ref2" class="footnote-backref">↩︎</a> <a href="#footnote-ref2:1" class="footnote-backref">↩︎</a></p></li><li id="footnote3" class="footnote-item"><p>Text of inline footnote <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p></li></ol></section>',3);function K(Q,ee){const a=l("ExternalLinkIcon");return s(),r("div",null,[h,e("p",null,[e("a",c,[t("link text"),n(a)])]),e("p",null,[e("a",p,[t("link with title"),n(a)])]),u,e("p",null,[t("The killer feature of "),f,t(" is very effective support of "),e("a",m,[t("syntax plugins"),n(a)]),t(".")]),e("h3",g,[b,t(),e("a",_,[t("Emojies"),n(a)])]),k,e("p",null,[t("see "),e("a",x,[t("how to change output"),n(a)]),t(" with twemoji.")]),e("h3",w,[v,t(),e("a",y,[t("Subscript"),n(a)]),t(" / "),e("a",T,[t("Superscript"),n(a)])]),q,e("h3",H,[j,t(),e("a",S,[t("<ins>"),n(a)])]),L,e("h3",D,[I,t(),e("a",M,[t("<mark>"),n(a)])]),z,e("h3",C,[E,t(),e("a",B,[t("Footnotes"),n(a)])]),F,e("h3",N,[V,t(),e("a",A,[t("Definition lists"),n(a)])]),O,e("h3",R,[P,t(),e("a",U,[t("Abbreviations"),n(a)])]),Y,W,X,e("h3",Z,[$,t(),e("a",G,[t("Custom containers"),n(a)])]),J])}const ae=i(d,[["render",K],["__file","index.html.vue"]]);export{ae as default};
