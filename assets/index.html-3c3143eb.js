import{_ as t,X as d,Y as r,a1 as e}from"./framework-9435e890.js";const s={},h=e('<h2 id="任务一" tabindex="-1"><a class="header-anchor" href="#任务一" aria-hidden="true">#</a> 任务一</h2><table><thead><tr><th>编号</th><th>消息长度</th><th>计算量</th><th>总耗时</th></tr></thead><tbody><tr><td>1</td><td>16384</td><td>0</td><td>0.203542 ms</td></tr><tr><td>2</td><td>32768</td><td>0</td><td>0.431834 ms</td></tr><tr><td>3</td><td>65536</td><td>0</td><td>0.658495 ms</td></tr><tr><td>4</td><td>131072</td><td>0</td><td>1.17202 ms</td></tr><tr><td>5</td><td>262144</td><td>0</td><td>1.97818 ms</td></tr><tr><td>6</td><td>524288</td><td>0</td><td>3.79249 ms</td></tr><tr><td>7</td><td>1048576</td><td>0</td><td>7.23377 ms</td></tr><tr><td>8</td><td>2097152</td><td>0</td><td>14.1605 ms</td></tr><tr><td>9</td><td>4194304</td><td>0</td><td>28.2017 ms</td></tr><tr><td>10</td><td>8388608</td><td>0</td><td>56.3029 ms</td></tr><tr><td>11</td><td>16777216</td><td>0</td><td>113.967 ms</td></tr><tr><td>12</td><td>33554432</td><td>0</td><td>224.596 ms</td></tr></tbody></table><ul><li>每次消息长度是倍增的，总耗时的变化趋势是如何的？</li></ul><p>总耗时近似与消息长度呈近似的正比关系.</p><ul><li>为什么会有这样的趋势？</li></ul><p>带宽存在上限. 因此消息长度越长, 发送所需的时间越长, 且通信速度稳定的情况下近似成正比.</p><h2 id="任务二" tabindex="-1"><a class="header-anchor" href="#任务二" aria-hidden="true">#</a> 任务二</h2><table><thead><tr><th>编号</th><th>消息长度</th><th>计算量</th><th>mpi_sync 总耗时</th><th>mpi_async 总耗时</th></tr></thead><tbody><tr><td>1</td><td>100000000</td><td>10</td><td>774.084 ms</td><td>664.895 ms</td></tr><tr><td>2</td><td>100000000</td><td>20</td><td>866.185 ms</td><td>662.789 ms</td></tr><tr><td>3</td><td>100000000</td><td>40</td><td>1073.73 ms</td><td>695.044 ms</td></tr><tr><td>4</td><td>100000000</td><td>80</td><td>1518.8 ms</td><td>800.207 ms</td></tr><tr><td>5</td><td>100000000</td><td>160</td><td>2277.11 ms</td><td>1600.32 ms</td></tr></tbody></table><ul><li>通信时间和计算时间满足什么关系时，非阻塞通信程序能完美掩盖通信时间？</li></ul><p>当通信时间小于计算时间时, 非阻塞通信程序能完美掩盖通信时间.</p><ul><li>简述两份代码的不同之处。</li></ul><p><code>mpi_sync</code> 在等待消息发送完成后才进行计算, 而 <code>mpi_async</code> 在调用 <code>MPI_Isend</code> 后不等待消息发送, 而是立刻进行计算, 计算完成后再等待消息发送完毕.</p>',12),a=[h];function m(l,c){return d(),r("div",null,a)}const o=t(s,[["render",m],["__file","index.html.vue"]]);export{o as default};
