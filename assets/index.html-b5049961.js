const t=JSON.parse('{"key":"v-1e083a86","path":"/course-work/hpc/2022/04/10/pa1-odd_even_sort/","title":"PA1: 奇偶排序（odd_even_sort）","lang":"en-US","frontmatter":{"lastUpdated":true,"contributors":true,"editLink":true,"category":["Course Work"],"tag":["Introduction to High Performance Computing","MPI"],"isOriginal":true,"date":"2022-04-10T00:00:00.000Z","permalinkPattern":"course-work/hpc/:year/:month/:day/:slug","title":"PA1: 奇偶排序（odd_even_sort）","description":"Performance Number of Nodes Number of Tasks Number Count v0 v1 v2 v3 v4 1 1 100000000 xxxxxxxxxx6&nbsp;1void a_plus_b_intrinsic(float* a, float* b, float* c, int n) {2 &nbsp;for (int i = 0; i &lt; n; i += 8) {3 &nbsp; &nbsp;_mm256_store_ps(4 &nbsp; &nbsp; &nbsp; &nbsp;c + i, _mm256_add_ps(_mm256_load_ps(a + i), _mm256_load_ps(b + i)));5 }6}c++ 1. 1. 1. 1. 1 2 100000000 1.82738226 1.83557525 1.8772568 1.86270894 1.67925379 1 4 100000000 3.05696721 3.17540441 3.37059297 3.39672385 2.3387731 1 8 100000000 5.15212684 5.59405831 6.03427353 6.15270254 3.29768106 1 16 100000000 7.65590815 8.91877194 9.65970998 10.31895407 4.39598177 2 32 100000000 10.63745468 12.91174115 14.70125847 15.67950831 5.01147717","head":[["meta",{"property":"og:url","content":"https://blog.liblaf.me/course-work/hpc/2022/04/10/pa1-odd_even_sort/"}],["meta",{"property":"og:site_name","content":"Blog"}],["meta",{"property":"og:title","content":"PA1: 奇偶排序（odd_even_sort）"}],["meta",{"property":"og:description","content":"Performance Number of Nodes Number of Tasks Number Count v0 v1 v2 v3 v4 1 1 100000000 xxxxxxxxxx6&nbsp;1void a_plus_b_intrinsic(float* a, float* b, float* c, int n) {2 &nbsp;for (int i = 0; i &lt; n; i += 8) {3 &nbsp; &nbsp;_mm256_store_ps(4 &nbsp; &nbsp; &nbsp; &nbsp;c + i, _mm256_add_ps(_mm256_load_ps(a + i), _mm256_load_ps(b + i)));5 }6}c++ 1. 1. 1. 1. 1 2 100000000 1.82738226 1.83557525 1.8772568 1.86270894 1.67925379 1 4 100000000 3.05696721 3.17540441 3.37059297 3.39672385 2.3387731 1 8 100000000 5.15212684 5.59405831 6.03427353 6.15270254 3.29768106 1 16 100000000 7.65590815 8.91877194 9.65970998 10.31895407 4.39598177 2 32 100000000 10.63745468 12.91174115 14.70125847 15.67950831 5.01147717"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-02-24T05:36:48.000Z"}],["meta",{"property":"article:tag","content":"Introduction to High Performance Computing"}],["meta",{"property":"article:tag","content":"MPI"}],["meta",{"property":"article:published_time","content":"2022-04-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-24T05:36:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PA1: 奇偶排序（odd_even_sort）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-10T00:00:00.000Z\\",\\"dateModified\\":\\"2023-02-24T05:36:48.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Performance","slug":"performance","link":"#performance","children":[]},{"level":2,"title":"v0","slug":"v0","link":"#v0","children":[{"level":3,"title":"AllReduceBitwiseAnd","slug":"allreducebitwiseand","link":"#allreducebitwiseand","children":[]},{"level":3,"title":"Source Code","slug":"source-code","link":"#source-code","children":[]},{"level":3,"title":"Performance","slug":"performance-1","link":"#performance-1","children":[]}]},{"level":2,"title":"v1","slug":"v1","link":"#v1","children":[{"level":3,"title":"Proof of Correctness","slug":"proof-of-correctness","link":"#proof-of-correctness","children":[{"level":4,"title":"Claim","slug":"claim","link":"#claim","children":[]},{"level":4,"title":"Proof","slug":"proof","link":"#proof","children":[]}]},{"level":3,"title":"Source Code","slug":"source-code-1","link":"#source-code-1","children":[]},{"level":3,"title":"Performance","slug":"performance-2","link":"#performance-2","children":[]}]},{"level":2,"title":"v2","slug":"v2","link":"#v2","children":[{"level":3,"title":"Optimized Merge","slug":"optimized-merge","link":"#optimized-merge","children":[]},{"level":3,"title":"Source Code","slug":"source-code-2","link":"#source-code-2","children":[]},{"level":3,"title":"Performace","slug":"performace","link":"#performace","children":[]}]},{"level":2,"title":"v3","slug":"v3","link":"#v3","children":[{"level":3,"title":"Lazy Copy","slug":"lazy-copy","link":"#lazy-copy","children":[]},{"level":3,"title":"Source Code","slug":"source-code-3","link":"#source-code-3","children":[]},{"level":3,"title":"Performance","slug":"performance-3","link":"#performance-3","children":[]}]},{"level":2,"title":"v4","slug":"v4","link":"#v4","children":[{"level":3,"title":"Bandwidth","slug":"bandwidth","link":"#bandwidth","children":[]},{"level":3,"title":"Source Code","slug":"source-code-4","link":"#source-code-4","children":[]},{"level":3,"title":"Performance","slug":"performance-4","link":"#performance-4","children":[]}]}],"git":{"createdTime":1677217008000,"updatedTime":1677217008000,"contributors":[{"name":"Qin Li","email":"liblaf@outlook.com","commits":1}]},"readingTime":{"minutes":13.89,"words":4168},"filePathRelative":"course-work/hpc/2022-04-10-pa1-odd_even_sort.md","localizedDate":"April 10, 2022","excerpt":"<h2> Performance</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Number of Nodes</th>\\n<th>Number of Tasks</th>\\n<th>Number Count</th>\\n<th>v0</th>\\n<th>v1</th>\\n<th>v2</th>\\n<th>v3</th>\\n<th>v4</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>1</td>\\n<td>1</td>\\n<td>100000000</td>\\n<td>xxxxxxxxxx6&nbsp;1void a_plus_b_intrinsic(float* a, float* b, float* c, int n) {2 &nbsp;for (int i = 0; i &lt; n; i += 8) {3 &nbsp; &nbsp;_mm256_store_ps(4 &nbsp; &nbsp; &nbsp; &nbsp;c + i, _mm256_add_ps(_mm256_load_ps(a + i), _mm256_load_ps(b + i)));5 }6}c++</td>\\n<td>1.</td>\\n<td>1.</td>\\n<td>1.</td>\\n<td>1.</td>\\n</tr>\\n<tr>\\n<td>1</td>\\n<td>2</td>\\n<td>100000000</td>\\n<td>1.82738226</td>\\n<td>1.83557525</td>\\n<td>1.8772568</td>\\n<td>1.86270894</td>\\n<td>1.67925379</td>\\n</tr>\\n<tr>\\n<td>1</td>\\n<td>4</td>\\n<td>100000000</td>\\n<td>3.05696721</td>\\n<td>3.17540441</td>\\n<td>3.37059297</td>\\n<td>3.39672385</td>\\n<td>2.3387731</td>\\n</tr>\\n<tr>\\n<td>1</td>\\n<td>8</td>\\n<td>100000000</td>\\n<td>5.15212684</td>\\n<td>5.59405831</td>\\n<td>6.03427353</td>\\n<td>6.15270254</td>\\n<td>3.29768106</td>\\n</tr>\\n<tr>\\n<td>1</td>\\n<td>16</td>\\n<td>100000000</td>\\n<td>7.65590815</td>\\n<td>8.91877194</td>\\n<td>9.65970998</td>\\n<td>10.31895407</td>\\n<td>4.39598177</td>\\n</tr>\\n<tr>\\n<td>2</td>\\n<td>32</td>\\n<td>100000000</td>\\n<td>10.63745468</td>\\n<td>12.91174115</td>\\n<td>14.70125847</td>\\n<td>15.67950831</td>\\n<td>5.01147717</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{t as data};
